Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 splash (0.8.28-1) focal; urgency=low
 .
   * Initial release.
Author:  Emmanuel Durand <edurand@sat.qc.ca>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2021-02-10

--- /dev/null
+++ splash-0.8.28/external/glfw/.appveyor.yml
@@ -0,0 +1,60 @@
+image:
+    - Visual Studio 2015
+    - Visual Studio 2019
+branches:
+    only:
+        - ci
+        - master
+        - 3.3-stable
+skip_tags: true
+environment:
+    matrix:
+        - GENERATOR: MinGW Makefiles
+          BUILD_SHARED_LIBS: ON
+          CFLAGS: -Werror
+        - GENERATOR: MinGW Makefiles
+          BUILD_SHARED_LIBS: OFF
+          CFLAGS: -Werror
+        - GENERATOR: Visual Studio 10 2010
+          BUILD_SHARED_LIBS: ON
+          CFLAGS: /WX
+        - GENERATOR: Visual Studio 10 2010
+          BUILD_SHARED_LIBS: OFF
+          CFLAGS: /WX
+        - GENERATOR: Visual Studio 16 2019
+          BUILD_SHARED_LIBS: ON
+          CFLAGS: /WX
+        - GENERATOR: Visual Studio 16 2019
+          BUILD_SHARED_LIBS: OFF
+          CFLAGS: /WX
+matrix:
+    fast_finish: true
+    exclude:
+        - image: Visual Studio 2015
+          GENERATOR: Visual Studio 16 2019
+        - image: Visual Studio 2019
+          GENERATOR: Visual Studio 10 2010
+        - image: Visual Studio 2019
+          GENERATOR: MinGW Makefiles
+for:
+-
+    matrix:
+        except:
+            - GENERATOR: Visual Studio 10 2010
+    build_script:
+        - set PATH=%PATH:C:\Program Files\Git\usr\bin=C:\MinGW\bin%
+        - cmake -S . -B build -G "%GENERATOR%" -DBUILD_SHARED_LIBS=%BUILD_SHARED_LIBS%
+        - cmake --build build
+-
+    matrix:
+        only:
+            - GENERATOR: Visual Studio 10 2010
+    build_script:
+        - cmake -S . -B build -G "%GENERATOR%" -DBUILD_SHARED_LIBS=%BUILD_SHARED_LIBS%
+        - cmake --build build --target glfw
+notifications:
+    - provider: Email
+      to:
+        - ci@glfw.org
+      on_build_failure: true
+      on_build_success: false
--- /dev/null
+++ splash-0.8.28/external/glfw/.travis.yml
@@ -0,0 +1,106 @@
+language: c
+compiler: clang
+branches:
+    only:
+        - ci
+        - master
+        - 3.3-stable
+matrix:
+    include:
+        - os: linux
+          dist: xenial
+          sudo: false
+          name: "X11 shared library"
+          addons:
+              apt:
+                  packages:
+                      - libxrandr-dev
+                      - libxinerama-dev
+                      - libxcursor-dev
+                      - libxi-dev
+          env:
+              - BUILD_SHARED_LIBS=ON
+              - CFLAGS=-Werror
+        - os: linux
+          dist: xenial
+          sudo: false
+          name: "X11 static library"
+          addons:
+              apt:
+                  packages:
+                      - libxrandr-dev
+                      - libxinerama-dev
+                      - libxcursor-dev
+                      - libxi-dev
+          env:
+              - BUILD_SHARED_LIBS=OFF
+              - CFLAGS=-Werror
+        - os: linux
+          dist: xenial
+          sudo: required
+          name: "Wayland shared library"
+          addons:
+              apt:
+                  sources:
+                      - ppa:kubuntu-ppa/backports
+                  packages:
+                      - extra-cmake-modules
+                      - libwayland-dev
+                      - libxkbcommon-dev
+                      - libegl1-mesa-dev
+          env:
+              - USE_WAYLAND=ON
+              - BUILD_SHARED_LIBS=ON
+              - CFLAGS=-Werror
+        - os: linux
+          dist: xenial
+          sudo: required
+          name: "Wayland static library"
+          addons:
+              apt:
+                  sources:
+                      - ppa:kubuntu-ppa/backports
+                  packages:
+                      - extra-cmake-modules
+                      - libwayland-dev
+                      - libxkbcommon-dev
+                      - libegl1-mesa-dev
+          env:
+              - USE_WAYLAND=ON
+              - BUILD_SHARED_LIBS=OFF
+              - CFLAGS=-Werror
+        - os: osx
+          sudo: false
+          name: "Cocoa shared library"
+          env:
+              - BUILD_SHARED_LIBS=ON
+              - CFLAGS=-Werror
+              - MACOSX_DEPLOYMENT_TARGET=10.8
+        - os: osx
+          sudo: false
+          name: "Cocoa static library"
+          env:
+              - BUILD_SHARED_LIBS=OFF
+              - CFLAGS=-Werror
+              - MACOSX_DEPLOYMENT_TARGET=10.8
+script:
+    - if grep -Inr '\s$' src include docs tests examples CMake *.md .gitattributes .gitignore; then
+          echo Trailing whitespace found, aborting;
+          exit 1;
+      fi
+    - mkdir build
+    - cd build
+    - if test -n "${USE_WAYLAND}"; then
+          git clone git://anongit.freedesktop.org/wayland/wayland-protocols;
+          pushd wayland-protocols;
+          git checkout 1.15 && ./autogen.sh --prefix=/usr && make && sudo make install;
+          popd;
+      fi
+    - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} -DGLFW_USE_WAYLAND=${USE_WAYLAND} ..
+    - cmake --build .
+notifications:
+    email:
+        recipients:
+            - ci@glfw.org
+    on_success: never
+    on_failure: always
--- /dev/null
+++ splash-0.8.28/external/libltc/autogen.sh
@@ -0,0 +1,11 @@
+#!/bin/sh
+
+if test -z "$LIBTOOLIZE"; then
+  if test "$(uname)" = "Darwin"; then
+    LIBTOOLIZE="glibtoolize"
+  else
+    LIBTOOLIZE="libtoolize"
+  fi
+fi
+
+aclocal && autoheader && $LIBTOOLIZE --copy -f && autoconf && automake --gnu --add-missing --copy -f && ./configure $@
--- /dev/null
+++ splash-0.8.28/external/libltc/build-deb.sh
@@ -0,0 +1,38 @@
+#!/bin/sh
+
+PACKAGE=libltc
+DEBRELEASE=$(head -n1 debian/changelog | cut -d ' ' -f 2 | sed 's/[()]*//g')
+
+TMPDIR=/tmp/$PACKAGE-${DEBRELEASE}
+rm -rf ${TMPDIR}
+
+GITBRANCH=${GITBRANCH:-master}
+
+echo "debian -export-ignore" >> .git/info/attributes
+
+git-buildpackage \
+	--git-upstream-branch=$GITBRANCH --git-debian-branch=$GITBRANCH \
+	--git-upstream-tree=branch \
+	--git-export-dir=${TMPDIR} --git-cleaner=/bin/true \
+	--git-force-create \
+	-rfakeroot $@ 
+
+ERROR=$?
+
+ed -s .git/info/attributes > /dev/null << EOF
+/debian -export-ignore
+d
+wq
+EOF
+
+if test $ERROR != 0; then
+	exit $ERROR
+fi
+
+lintian -i --pedantic ${TMPDIR}/${PACKAGE}_${DEBRELEASE}_*.changes \
+	| tee /tmp/${PACKAGE}.issues
+
+echo
+ls ${TMPDIR}/${PACKAGE}_${DEBRELEASE}_*.changes
+echo
+echo dput rg42 ${TMPDIR}/${PACKAGE}_${DEBRELEASE}_*.changes
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/changelog
@@ -0,0 +1,13 @@
+libltc (1.3.1-1) unstable; urgency=low
+
+  * Robin's private package. see ../ChangeLog
+  * official debian package at 
+    http://anonscm.debian.org/gitweb/?p=pkg-multimedia/libltc.git
+
+ -- Robin Gareus <robin@gareus.org>  Thu, 04 Apr 2019 03:36:09 +0200
+
+libltc (1.0.1-1) unstable; urgency=low
+
+  * Initial release. (Closes: #692102).
+
+ -- Jaromír Mikeš <mira.mikes@seznam.cz>  Sat, 03 Nov 2012 12:20:55 +0100
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/compat
@@ -0,0 +1 @@
+9
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/control
@@ -0,0 +1,62 @@
+Source: libltc
+Section: libs
+Priority: optional
+Maintainer: Robin Gareus <robin@gareus.org>
+Build-Depends:
+ automake,
+ autotools-dev,
+ debhelper (>= 9),
+ dh-autoreconf,
+ libtool
+Build-Depends-Indep:
+ doxygen
+Standards-Version: 3.9.3
+Homepage: https://github.com/x42/libltc
+Vcs-Git: git://github.com/x42/libltc.git
+
+Package: libltc-dev
+Section: libdevel
+Architecture: any
+Depends:
+ libltc11(= ${binary:Version}),
+ ${misc:Depends}
+Multi-Arch: same
+Description: Development files for libltc
+ Linear (or Longitudinal) Timecode (LTC) is an encoding of SMPTE timecode data
+ as a Manchester-Biphase encoded audio signal. The audio signal is commonly
+ recorded on a VTR track or other storage media.
+ libltc provides functionality to encode and decode LTC from/to SMPTE or EBU
+ timecode, including SMPTE date support.
+ .
+ This package contains files needed for application development.
+
+Package: libltc-doc
+Section: doc
+Architecture: all
+Depends:
+ ${misc:Depends}
+Description: Documentation for libltc
+ Linear (or Longitudinal) Timecode (LTC) is an encoding of SMPTE timecode data
+ as a Manchester-Biphase encoded audio signal. The audio signal is commonly
+ recorded on a VTR track or other storage media.
+ libltc provides functionality to encode and decode LTC from/to SMPTE or EBU
+ timecode, including SMPTE date support.
+ .
+ This package contains the API reference (as manpages) for the development of
+ applications.
+
+Package: libltc11
+Architecture: any
+Pre-Depends: ${misc:Pre-Depends}
+Depends:
+ ${misc:Depends},
+ ${shlibs:Depends}
+Multi-Arch: same
+Description: linear timecode library
+ Linear (or Longitudinal) Timecode (LTC) is an encoding of SMPTE timecode data
+ as a Manchester-Biphase encoded audio signal. The audio signal is commonly
+ recorded on a VTR track or other storage media.
+ libltc provides functionality to encode and decode LTC from/to SMPTE or EBU
+ timecode, including SMPTE date support.
+ .
+ This package provides the shared library.
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/copyright
@@ -0,0 +1,34 @@
+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
+Upstream-Name: libltc
+Upstream-Contact: 
+  Robin Gareus <robin@gareus.org>
+Source: git://github.com/x42/libltc.git
+
+Files: *
+Copyright:
+  2006-2012 Robin Gareus <robin@gareus.org>
+License: LGPL-3+
+
+Files: src/
+Copyright:
+	2003 Maarten de Boer
+  2006-2012 Robin Gareus <robin@gareus.org>
+	2008-2010 Jan Weiß
+License: LGPL-3+
+
+License: LGPL-3+
+ This package is free software; you can redistribute it and/or
+ modify it under the terms of the GNU Lesser General Public
+ License as published by the Free Software Foundation; either
+ version 3 of the License, or (at your option) any later version.
+ .
+ This package is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ Lesser General Public License for more details.
+ .
+ You should have received a copy of the GNU Lesser General Public
+ License along with this library; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+X-Comment: On Debian systems, the complete text of the GNU Lesser
+ General Public License can be found in `/usr/share/common-licenses/LGPL-3'.
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/libltc-dev.install
@@ -0,0 +1,4 @@
+usr/include/*
+usr/lib/*/lib*.so
+usr/lib/*/lib*.a
+usr/lib/*/pkgconfig/*
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/libltc-doc.install
@@ -0,0 +1 @@
+usr/share/man/man3/*.3
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/libltc11.install
@@ -0,0 +1 @@
+usr/lib/*/lib*.so.*
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/rules
@@ -0,0 +1,4 @@
+#!/usr/bin/make -f
+
+%:
+	dh $@ --with autoreconf
--- /dev/null
+++ splash-0.8.28/external/libltc/debian/source/format
@@ -0,0 +1 @@
+3.0 (quilt)
--- /dev/null
+++ splash-0.8.28/external/libltc/release.sh
@@ -0,0 +1,84 @@
+#!/bin/sh
+
+EDITOR=${EDITOR:-editor}
+
+if test ! -d .git; then
+	echo "ERROR: This script runs only from a git repository."
+	exit 1
+fi
+
+if test "`git symbolic-ref HEAD`" != "refs/heads/master"; then
+	echo "ERROR: The git 'master' branch must be checked out."
+	exit 1
+fi
+
+echo "commit pending changes.."
+git commit -a 
+
+# to bump the version number
+# - src/ltc.h (this is the MAIN VERSION used by configure) 
+#   and re-run autogen.sh to pick it up.
+# - Changelog 
+# - debian/changelog (for the debian package)
+
+echo "Update version number -- edit 3 files: src/ltc.h ChangeLog debian/changelog"
+echo -n "launch editor ? [Y/n]"
+read -n1 a
+echo
+
+if test "$a" != "n" -a "$a" != "N"; then
+	${EDITOR} src/ltc.h debian/changelog ChangeLog
+	sh autogen.sh
+fi
+
+VERSION=$(awk '/ VERSION /{print $3;}' src/config.h | sed 's/"//g')
+
+if [ -z "$VERSION" ]; then
+  echo "unknown VERSION number"
+  exit 1;
+fi
+
+echo "VERSION: $VERSION"
+
+echo -n "Is this correct? [Y/n]"
+read -n1 a
+echo
+if test "$a" == "n" -o "$a" == "N"; then
+	exit 1
+fi
+
+echo "re-creating man-pages and documentation with new version-number.."
+make dox 
+
+echo "creating git-commit of updated doc & version number"
+git commit -m "finalize changelog v${VERSION}" src/ltc.h ChangeLog debian/changelog doc/man/man3/ltc.h.3
+
+cd doc/html
+git add *.*
+git commit -a -m "doxgen -- v${VERSION}"
+cd ../..
+
+git tag "v${VERSION}" || (echo -n "version tagging failed. - press Enter to continue, CTRL-C to stop."; read; ) 
+
+echo -n "git push? [Y/n]"
+read -n1 a
+echo
+
+if test "$a" != "n" -a "$a" != "N"; then
+	git push origin || exit 1
+	#git push --tags ## would push ALL existing tags,
+	git push origin "refs/tags/v${VERSION}:refs/tags/v${VERSION}" || exit 1
+	cd doc/html
+	git push origin gh-pages || exit 1
+	cd ../..
+fi
+
+make distcheck
+
+ls -l "libltc-${VERSION}.tar.gz"
+
+GITREPO="x42/libltc"
+
+# open windows for github release drag/drop (until this can be scripted)
+xdg-open ./
+x-www-browser https://github.com/${GITREPO}/releases/
--- /dev/null
+++ splash-0.8.28/src/config.h
@@ -0,0 +1,52 @@
+#ifndef CONFIG_H
+#define CONFIG_H
+
+/* Considering a Linux system */
+#define HAVE_LINUX 1
+
+/* Defined to 1 if libgphoto2 is detected */
+#define HAVE_GPHOTO 1
+
+/* Defined to 1 if OpenCV is detected */
+#define HAVE_OPENCV 1
+
+/* Defined to 1 if portaudio-2.0 is detected */
+#define HAVE_PORTAUDIO 1
+
+/* Defined to 1 if jack is detected */
+#define HAVE_JACK 1
+
+/* Defined to 1 if shmdata-1.0 is detected */
+#define HAVE_SHMDATA 1
+
+/* Defined to 1 if python3.x is detected */
+#define HAVE_PYTHON 1
+
+/* Defined to 1 if the Datapath SDK is detected */
+#define HAVE_DATAPATH 0
+
+/* Defined to 1 if the CALIMIRO is detected */
+#define HAVE_CALIMIRO 1
+
+/* Support mmx instructions */
+#define HAVE_MMX 0
+
+/* Support SSE (Streaming SIMD Extensions) instructions */
+#define HAVE_SSE 0
+
+/* Support SSE2 (Streaming SIMD Extensions 2) instructions */
+#define HAVE_SSE2 0
+
+/* Support SSE3 (Streaming SIMD Extensions 3) instructions */
+#define HAVE_SSE3 0
+
+/* Support SSSE4.1 (Streaming SIMD Extensions 4.1) instructions */
+#define HAVE_SSE4_1 0
+
+/* Support SSSE3 (Supplemental Streaming SIMD Extensions 3) instructions */
+#define HAVE_SSSE3 0
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "0.8.28"
+
+#endif // CONFIG_H
